{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ann",
				"annotate"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Gruntfile.js",
			"settings":
			{
				"buffer_size": 4116,
				"line_ending": "Windows"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 492,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 4722,
				"line_ending": "Windows"
			}
		},
		{
			"file": "partials/profile.html",
			"settings":
			{
				"buffer_size": 2871,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/css/profile.css",
			"settings":
			{
				"buffer_size": 783,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nmodule.exports = function(grunt) {\n\n    grunt.initConfig({\n        pkg: grunt.file.readJSON('package.json'),\n        ngAnnotate: {\n            options: {\n                // Task-specific options go here.\n            },\n            dist: {\n                // Target-specific file lists and/or options go here.\n                files: [{\n                    expand: true,\n                    src: ['dist/<%= pkg.name %>.js'],\n                    ext: '.annotated.js', // dist filepaths will have this extension.\n                    extDot: 'last', // Extensions in filenames begin after the last dot\n                }]\n            }\n        },\n        concat: {\n            options: {\n                separator: ';'\n            },\n            dist: {\n                src: ['src/**/*.js'],\n                dist: 'dist/<%= pkg.name %>.js'\n            }\n        },\n        uglify: {\n            options: {\n                banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd-mm-yyyy\") %> */\\n'\n            },\n            dist: {\n                files: {\n                    'dist/<%= pkg.name %>.min.js': ['dist/<%= pkg.name %>.annotated.js']\n                }\n            }\n        },\n        cssmin: {\n            dist: {\n                files: {\n                    'dist/<%= pkg.name %>.min.css': ['src/**/*.css']\n                }\n            }\n        },\n        jshint: {\n            files: ['Gruntfile.js', 'src/**/*.js', 'test/**/*.js'],\n            options: {\n                // options here to override JSHint defaults\n                globals: {\n                    jQuery: true,\n                    console: true,\n                    module: true,\n                    document: true\n                }\n            }\n        },\n        connect: {\n            server: {\n                options: {\n                    livereload: true,\n                    port: 8000,\n                    hostname: '*',\n                }\n            }\n        },\n        watch: {\n            options: {\n                livereload: true\n            },\n            default: {\n                files: ['src/**/*.js', 'src/**/*.css']\n            },\n            html: {\n                files: ['**/*.html']\n            },\n            dist: {\n                files: ['dist/*.*']\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-ng-annotate');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n    grunt.loadNpmTasks('grunt-contrib-cssmin');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-concat');\n    grunt.loadNpmTasks('grunt-contrib-connect');\n\n    grunt.registerTask('default', ['jshint', 'concat', 'ngAnnotate', 'uglify', 'cssmin']);\n\n};",
			"settings":
			{
				"buffer_size": 2724,
				"line_ending": "Windows"
			}
		},
		{
			"file": ".jshintrc",
			"settings":
			{
				"buffer_size": 6466,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"tag",
				"Tag: Auto-Format Tags on Document"
			],
			[
				"format",
				"Tag: Auto-Format Tags on Document"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"form",
				"Format: Javascript"
			],
			[
				"for",
				"Format: Javascript"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"gl",
				"Glue - Launch"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"list",
				"Package Control: List Packages"
			]
		],
		"width": 713.0
	},
	"console":
	{
		"height": 167.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/partials",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/partials/forms",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/css",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/js"
	],
	"file_history":
	[
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/dist/Psyched.min.js",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/node_modules/grunt/node_modules/glob/test/pause-resume.js",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/package.json",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/css/index.css",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/partials/profile.html",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/partials/forms/pullup.html",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/css/profile.css",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/js/GraphTools.js",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/Gruntfile.js",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/User/Tag Package.sublime-settings",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/Tag/Tag Package.sublime-settings",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/JsFormat/Default (Windows).sublime-keymap",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/js/index.js",
		"/C/Users/samedi/Documents/GitHub/IBD/IBD/css/index.css",
		"/C/Cmder/config/ConEmu.xml",
		"/C/Cmder/vendor/init.bat",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/index.html",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/Glue/Glue.sublime-settings",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/src/css/graph.css",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/partials/graph.html",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/createToiletLog.html",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/node_modules/grunt-ng-annotate/node_modules/ng-annotate/node_modules/convert-source-map/test/comment-regex.js",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/bower_components/c3/LICENSE",
		"/C/Users/samedi/Documents/GitHub/IBD/IBD/Psyched.sublime-workspace",
		"/C/Users/samedi/Documents/GitHub/Psyched/Psyched/Psyched.sublime-project",
		"/C/Users/samedi/Documents/GitHub/IBD/IBD/js/createToiletLog.js",
		"/C/Users/samedi/Documents/GitHub/PrimusMotor/index.html",
		"/C/Users/samedi/Documents/GitHub/IBD/IBD/js/index.js",
		"/C/Users/samedi/AppData/Roaming/Sublime Text 3/Packages/JsFormat/JsFormat.sublime-settings",
		"/C/Users/samedi/floobits/welcome.md"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 121.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"dist:",
			"dist",
			"sass",
			"template",
			"public",
			"pk",
			"dest",
			"test this",
			"task"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Gruntfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4116,
						"regions":
						{
						},
						"selection":
						[
							[
								1182,
								1182
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Seti_UI/Prefs/Langs/Gruntfile JS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 649.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 492,
						"regions":
						{
						},
						"selection":
						[
							[
								492,
								492
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": true,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Seti_UI/Prefs/Langs/npm JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4722,
						"regions":
						{
						},
						"selection":
						[
							[
								4658,
								4658
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1782.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "partials/profile.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2871,
						"regions":
						{
						},
						"selection":
						[
							[
								295,
								295
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/css/profile.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 783,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2724,
						"regions":
						{
						},
						"selection":
						[
							[
								859,
								642
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Seti_UI/Prefs/Langs/Gruntfile JS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 132.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": ".jshintrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6466,
						"regions":
						{
						},
						"selection":
						[
							[
								567,
								567
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 27.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 140.0
	},
	"project": "Psyched.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"pro",
				"partials\\profile.html"
			],
			[
				"gra",
				"src\\js\\GraphTools.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"crea",
				"createToiletLog.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"selected_items":
		[
			[
				"",
				"C:\\Users\\samedi\\Documents\\GitHub\\JSCalendar\\JSCalendar.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
